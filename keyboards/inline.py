from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, CallbackQuery
from utils.db import connect, close
from aiogram import Router, F
router = Router()
accept_button = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text="–ü—Ä–∏–Ω—è—Ç—å",
            callback_data="accept"
        )
    ]
],
    resize_keyboard=True
)


back_in_main_menu = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text="–ù–∞–∑–∞–¥, –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
            callback_data="back_main_menu"
        )
    ]
],
    resize_keyboard=True
)


back_in_meal_menu = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text="–ù–∞–∑–∞–¥, –∫ –ø–∏—Ç–∞–Ω–∏—é",
            callback_data="back_in_meal_menu"
        )
    ]
],
    resize_keyboard=True
)


user_gender_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text="–ú—É–∂—Å–∫–æ–π", callback_data="male1"),
    ],
    [
        InlineKeyboardButton(text="–ñ–µ–Ω—Å–∫–∏–π", callback_data="female1")
    ]
],
    resize_keyboard=True
)

gender_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text="–ú—É–∂—Å–∫–æ–π", callback_data="male"),
    ],
    [
        InlineKeyboardButton(text="–ñ–µ–Ω—Å–∫–∏–π", callback_data="female")
    ]
],
    resize_keyboard=True
)

subscribe_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text="–ö—É–ø–∏—Ç—å - 777 üõí", callback_data='pay'),
    ],
    [
        InlineKeyboardButton(text="–ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ üéÅ", callback_data="promocode")
    ],
    [
        InlineKeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é üîô", callback_data="main_menu")
    ]
]
)


pay_button: InlineKeyboardMarkup = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text="–û–ø–ª–∞—Ç–∏—Ç—å üíµ", callback_data="want_pay"
        )
    ]
])

main_menu_keyboard: InlineKeyboardMarkup = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text="–û–ø–ª–∞—Ç–∏—Ç—å üíµ",
            callback_data="want_pay"
        )
    ],
    [
        InlineKeyboardButton(
            text="–û –ø—Ä–æ–µ–∫—Ç–µ üí™",
            callback_data="about"
        ),
        InlineKeyboardButton(
            text="–ü–æ–º–æ—â—å ‚ùì",
            callback_data="help"
        )
    ]
])


success_trening_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text="–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ üèÉüèª‚Äç‚ôÇÔ∏è",
            callback_data="training"
        ),
        InlineKeyboardButton(
            text="–ü–∏—Ç–∞–Ω–∏–µ üçè",
            callback_data="back_in_meal_menu"
        )
    ],
    [
        InlineKeyboardButton(text="–ü–æ–º–æ—â—å", callback_data="help")
    ]
])


# async def generate_meal_keyboard():
#     conn = connect()
#     cursor = conn.cursor()
#
#     try:
#         cursor.execute("SELECT meal_name FROM meals;")
#         meals = cursor.fetchall()
#
#         # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–Ω–æ–ø–∫–∏ –≤ —Å–ø–∏—Å–æ–∫
#         buttons = [InlineKeyboardButton(text=meal[0], callback_data=f"meal:{meal[0]}") for meal in meals]
#         back_button = [InlineKeyboardButton(text="–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="back_main_menu")]
#
#         # –°–æ–∑–¥–∞–µ–º InlineKeyboardMarkup, –ø–µ—Ä–µ–¥–∞–≤–∞—è –∫–Ω–æ–ø–∫–∏ –∫–∞–∫ —Å–ø–∏—Å–æ–∫ —Å–ø–∏—Å–∫–æ–≤
#         keyboard_markup = InlineKeyboardMarkup(inline_keyboard=[buttons, back_button])
#
#         return keyboard_markup
#
#     except Exception as e:
#         print(f"Error: {e}")
#         return None
#
#     finally:
#         cursor.close()
#         conn.close()

next_button = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text="–î–∞–ª–µ–µ ‚û°Ô∏è",
            callback_data="next1"
        )
    ]
],
    resize_keyboard=True
)


next_button2 = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text="–î–∞–ª–µ–µ ‚û°Ô∏è",
            callback_data="next2"
        )
    ]
],
    resize_keyboard=True
)


next_button3 = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(
            text="–î–∞–ª–µ–µ ‚û°Ô∏è",
            callback_data="next3"
        )
    ]
],
    resize_keyboard=True
)


help_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    # [
    #     #InlineKeyboardButton(text="–û–±—â–µ–Ω–∏–µ üó£", url="https://t.me/+TgAj34afQ0lkOTIy"),
    #     #InlineKeyboardButton(text="–í–æ–ø—Ä–æ—Å/–û—Ç–≤–µ—Ç üÜò", callback_data="qwestion/answer")
    # ],
    [
        InlineKeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç ‚ùì", callback_data="quick_answer")
    ],
    [
        InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏—Ç—å üíµ", callback_data="want_pay")
    ],
    [
        InlineKeyboardButton(text="–ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–ø–ª–∞—Ç–æ–π üí∏", callback_data="problem_pay")
    ],
    [
        InlineKeyboardButton(text="–ù–∞–∑–∞–¥ üîô", callback_data="back_main_menu")
    ]
])


async def get_help_keyboard(user_id):
    buttons = []
    if await is_subscription_active(user_id):
        buttons.append([InlineKeyboardButton(text="–ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª –¥–ª—è –æ–±—â–µ–Ω–∏—è", url="https://t.me/+TgAj34afQ0lkOTIy")])
    buttons.append([InlineKeyboardButton(text="–ü–æ–ª—É—á–∏—Ç—å –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç ‚ùì", callback_data="quick_answer")])
    if await is_subscription_active(user_id):
        buttons.append([InlineKeyboardButton(text="–ö—É–ø–∏—Ç—å 777 üõí", callback_data="do_you_want_pay")])
    buttons.append([InlineKeyboardButton(text="–ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–ø–ª–∞—Ç–æ–π üí∏", callback_data="problem_pay")])
    buttons.append([InlineKeyboardButton(text="–ù–∞–∑–∞–¥ üîô", callback_data="back_main_menu")])
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


async def is_subscription_active(user_id):
    conn = connect()
    cursor = conn.cursor()
    cursor.execute("SELECT 1 FROM users WHERE telegram_user_id = %s AND is_subscription_active = TRUE", (user_id,))
    active_user = cursor.fetchone()
    cursor.close()
    conn.close()
    return active_user is not None


@router.callback_query(lambda c: c.data == 'do_you_want_pay')
async def do_you_want_pay(callback: CallbackQuery):
    conn = connect()
    cursor = conn.cursor()
    cursor.execute("SELECT subscription_days FROM users WHERE telegram_user_id = %s AND is_subscription_active = TRUE", (callback.from_user.id,))
    subscribe_days = cursor.fetchone()
    await callback.message.answer(text=f"–£ –≤–∞—Å –¥–µ–π—Å—Ç–≤—É–µ—Ç –ø–æ–¥–ø–∏—Å–∫–∞ {subscribe_days} –¥–Ω–µ–π. \n"
                                       f"–•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–ª–∏—Ç—å –∞–±–æ–Ω–µ–º–µ–Ω—Ç?", reply_markup=new_abonement)


new_abonement = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text='–î–∞', callback_data="pay"),
        InlineKeyboardButton(text="–ù–µ—Ç", callback_data="back_main_menu")
    ]
])


question_answer_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text="–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ üèÉ", callback_data="training_question")
    ],
    [
        InlineKeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Ü©Ô∏è", callback_data="back_main_menu")
    ]
])


training_question_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text="–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ üë§", callback_data="recomendation_training")
    ],
    [
        InlineKeyboardButton(text="–ù–∞–∑–∞–¥ üîô", callback_data="qwestion/answer"),
        InlineKeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Ü©Ô∏è", callback_data="back_main_menu")
    ]
])


back_or_main_menu_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text="–ù–∞–∑–∞–¥ üîô", callback_data="meal_question"),
        InlineKeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Ü©Ô∏è", callback_data="back_main_menu")
    ]
])


pay_problem_keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [
        InlineKeyboardButton(text="–°–≤—è–∑–∞—Ç—å—Å—èüìû", callback_data="problem_pay", url="https://t.me/IF_PROEKT_13"),
        InlineKeyboardButton(text="–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ‚Ü©Ô∏è", callback_data="back_main_menu")
    ]
])